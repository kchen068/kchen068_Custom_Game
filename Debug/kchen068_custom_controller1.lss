
kchen068_custom_controller1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000222  00800100  00000b92  00000c46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b92  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  00800322  00800322  00000e68  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  00000e68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  00000e6c  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e9c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000120  00000000  00000000  00000ee0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000018fa  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b04  00000000  00000000  000028fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c0c  00000000  00000000  000033fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001ec  00000000  00000000  0000400c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006cb  00000000  00000000  000041f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000997  00000000  00000000  000048c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000e0  00000000  00000000  0000525a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	86 c2       	rjmp	.+1292   	; 0x542 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e9       	ldi	r30, 0x92	; 146
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 32       	cpi	r26, 0x22	; 34
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	23 e0       	ldi	r18, 0x03	; 3
  b4:	a2 e2       	ldi	r26, 0x22	; 34
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 34       	cpi	r26, 0x4C	; 76
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	24 d3       	rcall	.+1608   	; 0x70c <main>
  c4:	64 c5       	rjmp	.+2760   	; 0xb8e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_Command>:
void TimerOff() {
	TCCR1B 	= 0x00; // bit3bit2bit1bit0=0000: timer off
}

void TimerISR() {
	TimerFlag = 1;
  c8:	88 b9       	out	0x08, r24	; 8
  ca:	5d 98       	cbi	0x0b, 5	; 11
  cc:	5e 98       	cbi	0x0b, 6	; 11
  ce:	5f 9a       	sbi	0x0b, 7	; 11
  d0:	82 e0       	ldi	r24, 0x02	; 2
  d2:	8a 95       	dec	r24
  d4:	f1 f7       	brne	.-4      	; 0xd2 <LCD_Command+0xa>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <LCD_Command+0x10>
  d8:	5f 98       	cbi	0x0b, 7	; 11
  da:	8f e9       	ldi	r24, 0x9F	; 159
  dc:	9f e0       	ldi	r25, 0x0F	; 15
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <LCD_Command+0x16>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_Command+0x1c>
  e4:	00 00       	nop
  e6:	08 95       	ret

000000e8 <LCD_Char>:
  e8:	88 b9       	out	0x08, r24	; 8
  ea:	5d 9a       	sbi	0x0b, 5	; 11
  ec:	5e 98       	cbi	0x0b, 6	; 11
  ee:	5f 9a       	sbi	0x0b, 7	; 11
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	8a 95       	dec	r24
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LCD_Char+0xa>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <LCD_Char+0x10>
  f8:	5f 98       	cbi	0x0b, 7	; 11
  fa:	8f e9       	ldi	r24, 0x9F	; 159
  fc:	9f e0       	ldi	r25, 0x0F	; 15
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <LCD_Char+0x16>
 102:	00 c0       	rjmp	.+0      	; 0x104 <LCD_Char+0x1c>
 104:	00 00       	nop
 106:	08 95       	ret

00000108 <LCD_Init>:
 108:	8f ef       	ldi	r24, 0xFF	; 255
 10a:	8a b9       	out	0x0a, r24	; 10
 10c:	87 b9       	out	0x07, r24	; 7
 10e:	8f e3       	ldi	r24, 0x3F	; 63
 110:	9c e9       	ldi	r25, 0x9C	; 156
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <LCD_Init+0xa>
 116:	00 c0       	rjmp	.+0      	; 0x118 <LCD_Init+0x10>
 118:	00 00       	nop
 11a:	88 e3       	ldi	r24, 0x38	; 56
 11c:	d5 df       	rcall	.-86     	; 0xc8 <LCD_Command>
 11e:	8c e0       	ldi	r24, 0x0C	; 12
 120:	d3 df       	rcall	.-90     	; 0xc8 <LCD_Command>
 122:	86 e0       	ldi	r24, 0x06	; 6
 124:	d1 df       	rcall	.-94     	; 0xc8 <LCD_Command>
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	cf df       	rcall	.-98     	; 0xc8 <LCD_Command>
 12a:	8f e9       	ldi	r24, 0x9F	; 159
 12c:	9f e0       	ldi	r25, 0x0F	; 15
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <LCD_Init+0x26>
 132:	00 c0       	rjmp	.+0      	; 0x134 <LCD_Init+0x2c>
 134:	00 00       	nop
 136:	80 e8       	ldi	r24, 0x80	; 128
 138:	c7 cf       	rjmp	.-114    	; 0xc8 <LCD_Command>
 13a:	08 95       	ret

0000013c <LCD_String>:
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	ec 01       	movw	r28, r24
 142:	88 81       	ld	r24, Y
 144:	88 23       	and	r24, r24
 146:	29 f0       	breq	.+10     	; 0x152 <LCD_String+0x16>
 148:	21 96       	adiw	r28, 0x01	; 1
 14a:	ce df       	rcall	.-100    	; 0xe8 <LCD_Char>
 14c:	89 91       	ld	r24, Y+
 14e:	81 11       	cpse	r24, r1
 150:	fc cf       	rjmp	.-8      	; 0x14a <LCD_String+0xe>
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	08 95       	ret

00000158 <LCD_Clear>:
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	b6 df       	rcall	.-148    	; 0xc8 <LCD_Command>
 15c:	80 e8       	ldi	r24, 0x80	; 128
 15e:	b4 cf       	rjmp	.-152    	; 0xc8 <LCD_Command>
 160:	08 95       	ret

00000162 <SM2tick>:
 162:	ef 92       	push	r14
 164:	ff 92       	push	r15
 166:	0f 93       	push	r16
 168:	1f 93       	push	r17
 16a:	cf 93       	push	r28
 16c:	df 93       	push	r29
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
 172:	c8 50       	subi	r28, 0x08	; 8
 174:	d1 40       	sbci	r29, 0x01	; 1
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	f8 94       	cli
 17a:	de bf       	out	0x3e, r29	; 62
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	cd bf       	out	0x3d, r28	; 61
 180:	e0 90 38 03 	lds	r14, 0x0338	; 0x800338 <add>
 184:	f0 90 39 03 	lds	r15, 0x0339	; 0x800339 <add+0x1>
 188:	24 e8       	ldi	r18, 0x84	; 132
 18a:	e2 ef       	ldi	r30, 0xF2	; 242
 18c:	f1 e0       	ldi	r31, 0x01	; 1
 18e:	de 01       	movw	r26, r28
 190:	11 96       	adiw	r26, 0x01	; 1
 192:	01 90       	ld	r0, Z+
 194:	0d 92       	st	X+, r0
 196:	2a 95       	dec	r18
 198:	e1 f7       	brne	.-8      	; 0x192 <SM2tick+0x30>
 19a:	24 e8       	ldi	r18, 0x84	; 132
 19c:	e6 e7       	ldi	r30, 0x76	; 118
 19e:	f2 e0       	ldi	r31, 0x02	; 2
 1a0:	de 01       	movw	r26, r28
 1a2:	ab 57       	subi	r26, 0x7B	; 123
 1a4:	bf 4f       	sbci	r27, 0xFF	; 255
 1a6:	01 90       	ld	r0, Z+
 1a8:	0d 92       	st	X+, r0
 1aa:	2a 95       	dec	r18
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <SM2tick+0x44>
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	91 05       	cpc	r25, r1
 1b2:	69 f0       	breq	.+26     	; 0x1ce <SM2tick+0x6c>
 1b4:	82 30       	cpi	r24, 0x02	; 2
 1b6:	91 05       	cpc	r25, r1
 1b8:	81 f0       	breq	.+32     	; 0x1da <SM2tick+0x78>
 1ba:	89 2b       	or	r24, r25
 1bc:	09 f0       	breq	.+2      	; 0x1c0 <SM2tick+0x5e>
 1be:	67 c0       	rjmp	.+206    	; 0x28e <SM2tick+0x12c>
 1c0:	80 91 37 03 	lds	r24, 0x0337	; 0x800337 <a>
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	09 f0       	breq	.+2      	; 0x1ca <SM2tick+0x68>
 1c8:	62 c0       	rjmp	.+196    	; 0x28e <SM2tick+0x12c>
 1ca:	c6 df       	rcall	.-116    	; 0x158 <LCD_Clear>
 1cc:	e2 c0       	rjmp	.+452    	; 0x392 <SM2tick+0x230>
 1ce:	83 e3       	ldi	r24, 0x33	; 51
 1d0:	e8 16       	cp	r14, r24
 1d2:	f1 04       	cpc	r15, r1
 1d4:	09 f0       	breq	.+2      	; 0x1d8 <SM2tick+0x76>
 1d6:	dd c0       	rjmp	.+442    	; 0x392 <SM2tick+0x230>
 1d8:	84 c0       	rjmp	.+264    	; 0x2e2 <SM2tick+0x180>
 1da:	80 91 37 03 	lds	r24, 0x0337	; 0x800337 <a>
 1de:	88 30       	cpi	r24, 0x08	; 8
 1e0:	09 f0       	breq	.+2      	; 0x1e4 <SM2tick+0x82>
 1e2:	7f c0       	rjmp	.+254    	; 0x2e2 <SM2tick+0x180>
 1e4:	54 c0       	rjmp	.+168    	; 0x28e <SM2tick+0x12c>
 1e6:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <score+0x1>
 1ea:	89 30       	cpi	r24, 0x09	; 9
 1ec:	39 f4       	brne	.+14     	; 0x1fc <SM2tick+0x9a>
 1ee:	e5 e3       	ldi	r30, 0x35	; 53
 1f0:	f3 e0       	ldi	r31, 0x03	; 3
 1f2:	11 82       	std	Z+1, r1	; 0x01
 1f4:	80 81       	ld	r24, Z
 1f6:	8f 5f       	subi	r24, 0xFF	; 255
 1f8:	80 83       	st	Z, r24
 1fa:	03 c0       	rjmp	.+6      	; 0x202 <SM2tick+0xa0>
 1fc:	8f 5f       	subi	r24, 0xFF	; 255
 1fe:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <score+0x1>
 202:	81 e8       	ldi	r24, 0x81	; 129
 204:	61 df       	rcall	.-318    	; 0xc8 <LCD_Command>
 206:	ee 0c       	add	r14, r14
 208:	ff 1c       	adc	r15, r15
 20a:	01 e0       	ldi	r16, 0x01	; 1
 20c:	10 e0       	ldi	r17, 0x00	; 0
 20e:	0c 0f       	add	r16, r28
 210:	1d 1f       	adc	r17, r29
 212:	0e 0d       	add	r16, r14
 214:	1f 1d       	adc	r17, r15
 216:	92 e2       	ldi	r25, 0x22	; 34
 218:	e9 0e       	add	r14, r25
 21a:	f1 1c       	adc	r15, r1
 21c:	e1 e0       	ldi	r30, 0x01	; 1
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	ec 0f       	add	r30, r28
 222:	fd 1f       	adc	r31, r29
 224:	ee 0e       	add	r14, r30
 226:	ff 1e       	adc	r15, r31
 228:	f8 01       	movw	r30, r16
 22a:	80 81       	ld	r24, Z
 22c:	0e 5f       	subi	r16, 0xFE	; 254
 22e:	1f 4f       	sbci	r17, 0xFF	; 255
 230:	5b df       	rcall	.-330    	; 0xe8 <LCD_Char>
 232:	e0 16       	cp	r14, r16
 234:	f1 06       	cpc	r15, r17
 236:	c1 f7       	brne	.-16     	; 0x228 <SM2tick+0xc6>
 238:	e0 90 38 03 	lds	r14, 0x0338	; 0x800338 <add>
 23c:	f0 90 39 03 	lds	r15, 0x0339	; 0x800339 <add+0x1>
 240:	81 ec       	ldi	r24, 0xC1	; 193
 242:	42 df       	rcall	.-380    	; 0xc8 <LCD_Command>
 244:	ee 0c       	add	r14, r14
 246:	ff 1c       	adc	r15, r15
 248:	05 e8       	ldi	r16, 0x85	; 133
 24a:	10 e0       	ldi	r17, 0x00	; 0
 24c:	0c 0f       	add	r16, r28
 24e:	1d 1f       	adc	r17, r29
 250:	0e 0d       	add	r16, r14
 252:	1f 1d       	adc	r17, r15
 254:	f2 e2       	ldi	r31, 0x22	; 34
 256:	ef 0e       	add	r14, r31
 258:	f1 1c       	adc	r15, r1
 25a:	85 e8       	ldi	r24, 0x85	; 133
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	8c 0f       	add	r24, r28
 260:	9d 1f       	adc	r25, r29
 262:	e8 0e       	add	r14, r24
 264:	f9 1e       	adc	r15, r25
 266:	f8 01       	movw	r30, r16
 268:	80 81       	ld	r24, Z
 26a:	0e 5f       	subi	r16, 0xFE	; 254
 26c:	1f 4f       	sbci	r17, 0xFF	; 255
 26e:	3c df       	rcall	.-392    	; 0xe8 <LCD_Char>
 270:	e0 16       	cp	r14, r16
 272:	f1 06       	cpc	r15, r17
 274:	c1 f7       	brne	.-16     	; 0x266 <SM2tick+0x104>
 276:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <add>
 27a:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <add+0x1>
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <add+0x1>
 284:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <add>
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	88 c0       	rjmp	.+272    	; 0x39e <SM2tick+0x23c>
 28e:	e5 e3       	ldi	r30, 0x35	; 53
 290:	f3 e0       	ldi	r31, 0x03	; 3
 292:	10 82       	st	Z, r1
 294:	11 82       	std	Z+1, r1	; 0x01
 296:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <add+0x1>
 29a:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <add>
 29e:	80 e8       	ldi	r24, 0x80	; 128
 2a0:	13 df       	rcall	.-474    	; 0xc8 <LCD_Command>
 2a2:	8a ef       	ldi	r24, 0xFA	; 250
 2a4:	92 e0       	ldi	r25, 0x02	; 2
 2a6:	4a df       	rcall	.-364    	; 0x13c <LCD_String>
 2a8:	80 ec       	ldi	r24, 0xC0	; 192
 2aa:	0e df       	rcall	.-484    	; 0xc8 <LCD_Command>
 2ac:	8b e0       	ldi	r24, 0x0B	; 11
 2ae:	93 e0       	ldi	r25, 0x03	; 3
 2b0:	45 df       	rcall	.-374    	; 0x13c <LCD_String>
 2b2:	42 e0       	ldi	r20, 0x02	; 2
 2b4:	50 e0       	ldi	r21, 0x00	; 0
 2b6:	62 e0       	ldi	r22, 0x02	; 2
 2b8:	70 e0       	ldi	r23, 0x00	; 0
 2ba:	83 e3       	ldi	r24, 0x33	; 51
 2bc:	93 e0       	ldi	r25, 0x03	; 3
 2be:	40 d4       	rcall	.+2176   	; 0xb40 <eeprom_read_block>
 2c0:	8b ec       	ldi	r24, 0xCB	; 203
 2c2:	02 df       	rcall	.-508    	; 0xc8 <LCD_Command>
 2c4:	03 e3       	ldi	r16, 0x33	; 51
 2c6:	13 e0       	ldi	r17, 0x03	; 3
 2c8:	f8 01       	movw	r30, r16
 2ca:	80 81       	ld	r24, Z
 2cc:	80 5d       	subi	r24, 0xD0	; 208
 2ce:	0c df       	rcall	.-488    	; 0xe8 <LCD_Char>
 2d0:	8c ec       	ldi	r24, 0xCC	; 204
 2d2:	fa de       	rcall	.-524    	; 0xc8 <LCD_Command>
 2d4:	f8 01       	movw	r30, r16
 2d6:	81 81       	ldd	r24, Z+1	; 0x01
 2d8:	80 5d       	subi	r24, 0xD0	; 208
 2da:	06 df       	rcall	.-500    	; 0xe8 <LCD_Char>
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	5e c0       	rjmp	.+188    	; 0x39e <SM2tick+0x23c>
 2e2:	e5 e3       	ldi	r30, 0x35	; 53
 2e4:	f3 e0       	ldi	r31, 0x03	; 3
 2e6:	50 81       	ld	r21, Z
 2e8:	41 81       	ldd	r20, Z+1	; 0x01
 2ea:	25 2f       	mov	r18, r21
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	c9 01       	movw	r24, r18
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	22 0f       	add	r18, r18
 2f6:	33 1f       	adc	r19, r19
 2f8:	22 0f       	add	r18, r18
 2fa:	33 1f       	adc	r19, r19
 2fc:	22 0f       	add	r18, r18
 2fe:	33 1f       	adc	r19, r19
 300:	82 0f       	add	r24, r18
 302:	93 1f       	adc	r25, r19
 304:	84 0f       	add	r24, r20
 306:	91 1d       	adc	r25, r1
 308:	90 93 48 03 	sts	0x0348, r25	; 0x800348 <intscore+0x1>
 30c:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <intscore>
 310:	e3 e3       	ldi	r30, 0x33	; 51
 312:	f3 e0       	ldi	r31, 0x03	; 3
 314:	60 81       	ld	r22, Z
 316:	26 2f       	mov	r18, r22
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	d9 01       	movw	r26, r18
 31c:	aa 0f       	add	r26, r26
 31e:	bb 1f       	adc	r27, r27
 320:	22 0f       	add	r18, r18
 322:	33 1f       	adc	r19, r19
 324:	22 0f       	add	r18, r18
 326:	33 1f       	adc	r19, r19
 328:	22 0f       	add	r18, r18
 32a:	33 1f       	adc	r19, r19
 32c:	2a 0f       	add	r18, r26
 32e:	3b 1f       	adc	r19, r27
 330:	71 81       	ldd	r23, Z+1	; 0x01
 332:	27 0f       	add	r18, r23
 334:	31 1d       	adc	r19, r1
 336:	82 17       	cp	r24, r18
 338:	93 07       	cpc	r25, r19
 33a:	3c f4       	brge	.+14     	; 0x34a <SM2tick+0x1e8>
 33c:	62 30       	cpi	r22, 0x02	; 2
 33e:	28 f4       	brcc	.+10     	; 0x34a <SM2tick+0x1e8>
 340:	30 93 4b 03 	sts	0x034B, r19	; 0x80034b <highScore+0x1>
 344:	20 93 4a 03 	sts	0x034A, r18	; 0x80034a <highScore>
 348:	0e c0       	rjmp	.+28     	; 0x366 <SM2tick+0x204>
 34a:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <highScore+0x1>
 34e:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <highScore>
 352:	e3 e3       	ldi	r30, 0x33	; 51
 354:	f3 e0       	ldi	r31, 0x03	; 3
 356:	50 83       	st	Z, r21
 358:	41 83       	std	Z+1, r20	; 0x01
 35a:	42 e0       	ldi	r20, 0x02	; 2
 35c:	50 e0       	ldi	r21, 0x00	; 0
 35e:	62 e0       	ldi	r22, 0x02	; 2
 360:	70 e0       	ldi	r23, 0x00	; 0
 362:	cf 01       	movw	r24, r30
 364:	fd d3       	rcall	.+2042   	; 0xb60 <eeprom_write_block>
 366:	80 e8       	ldi	r24, 0x80	; 128
 368:	af de       	rcall	.-674    	; 0xc8 <LCD_Command>
 36a:	87 e1       	ldi	r24, 0x17	; 23
 36c:	93 e0       	ldi	r25, 0x03	; 3
 36e:	e6 de       	rcall	.-564    	; 0x13c <LCD_String>
 370:	80 ec       	ldi	r24, 0xC0	; 192
 372:	aa de       	rcall	.-684    	; 0xc8 <LCD_Command>
 374:	05 e3       	ldi	r16, 0x35	; 53
 376:	13 e0       	ldi	r17, 0x03	; 3
 378:	f8 01       	movw	r30, r16
 37a:	80 81       	ld	r24, Z
 37c:	80 5d       	subi	r24, 0xD0	; 208
 37e:	b4 de       	rcall	.-664    	; 0xe8 <LCD_Char>
 380:	81 ec       	ldi	r24, 0xC1	; 193
 382:	a2 de       	rcall	.-700    	; 0xc8 <LCD_Command>
 384:	f8 01       	movw	r30, r16
 386:	81 81       	ldd	r24, Z+1	; 0x01
 388:	80 5d       	subi	r24, 0xD0	; 208
 38a:	ae de       	rcall	.-676    	; 0xe8 <LCD_Char>
 38c:	82 e0       	ldi	r24, 0x02	; 2
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	06 c0       	rjmp	.+12     	; 0x39e <SM2tick+0x23c>
 392:	80 91 37 03 	lds	r24, 0x0337	; 0x800337 <a>
 396:	80 31       	cpi	r24, 0x10	; 16
 398:	09 f0       	breq	.+2      	; 0x39c <SM2tick+0x23a>
 39a:	33 cf       	rjmp	.-410    	; 0x202 <SM2tick+0xa0>
 39c:	24 cf       	rjmp	.-440    	; 0x1e6 <SM2tick+0x84>
 39e:	c8 5f       	subi	r28, 0xF8	; 248
 3a0:	de 4f       	sbci	r29, 0xFE	; 254
 3a2:	0f b6       	in	r0, 0x3f	; 63
 3a4:	f8 94       	cli
 3a6:	de bf       	out	0x3e, r29	; 62
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	cd bf       	out	0x3d, r28	; 61
 3ac:	df 91       	pop	r29
 3ae:	cf 91       	pop	r28
 3b0:	1f 91       	pop	r17
 3b2:	0f 91       	pop	r16
 3b4:	ff 90       	pop	r15
 3b6:	ef 90       	pop	r14
 3b8:	08 95       	ret

000003ba <LCD_Custom_Char>:
 3ba:	0f 93       	push	r16
 3bc:	1f 93       	push	r17
 3be:	cf 93       	push	r28
 3c0:	df 93       	push	r29
 3c2:	88 30       	cpi	r24, 0x08	; 8
 3c4:	70 f4       	brcc	.+28     	; 0x3e2 <LCD_Custom_Char+0x28>
 3c6:	8b 01       	movw	r16, r22
 3c8:	88 0f       	add	r24, r24
 3ca:	88 0f       	add	r24, r24
 3cc:	88 0f       	add	r24, r24
 3ce:	80 5c       	subi	r24, 0xC0	; 192
 3d0:	7b de       	rcall	.-778    	; 0xc8 <LCD_Command>
 3d2:	e8 01       	movw	r28, r16
 3d4:	08 5f       	subi	r16, 0xF8	; 248
 3d6:	1f 4f       	sbci	r17, 0xFF	; 255
 3d8:	89 91       	ld	r24, Y+
 3da:	86 de       	rcall	.-756    	; 0xe8 <LCD_Char>
 3dc:	c0 17       	cp	r28, r16
 3de:	d1 07       	cpc	r29, r17
 3e0:	d9 f7       	brne	.-10     	; 0x3d8 <LCD_Custom_Char+0x1e>
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	1f 91       	pop	r17
 3e8:	0f 91       	pop	r16
 3ea:	08 95       	ret

000003ec <set_PWM>:
 3ec:	cf 92       	push	r12
 3ee:	df 92       	push	r13
 3f0:	ef 92       	push	r14
 3f2:	ff 92       	push	r15
 3f4:	6b 01       	movw	r12, r22
 3f6:	7c 01       	movw	r14, r24
 3f8:	9b 01       	movw	r18, r22
 3fa:	ac 01       	movw	r20, r24
 3fc:	60 91 2d 03 	lds	r22, 0x032D	; 0x80032d <current_frequency.1818>
 400:	70 91 2e 03 	lds	r23, 0x032E	; 0x80032e <current_frequency.1818+0x1>
 404:	80 91 2f 03 	lds	r24, 0x032F	; 0x80032f <current_frequency.1818+0x2>
 408:	90 91 30 03 	lds	r25, 0x0330	; 0x800330 <current_frequency.1818+0x3>
 40c:	20 d2       	rcall	.+1088   	; 0x84e <__cmpsf2>
 40e:	88 23       	and	r24, r24
 410:	09 f4       	brne	.+2      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 412:	52 c0       	rjmp	.+164    	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 414:	20 e0       	ldi	r18, 0x00	; 0
 416:	30 e0       	ldi	r19, 0x00	; 0
 418:	a9 01       	movw	r20, r18
 41a:	c7 01       	movw	r24, r14
 41c:	b6 01       	movw	r22, r12
 41e:	17 d2       	rcall	.+1070   	; 0x84e <__cmpsf2>
 420:	81 11       	cpse	r24, r1
 422:	06 c0       	rjmp	.+12     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 424:	e1 e9       	ldi	r30, 0x91	; 145
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	80 81       	ld	r24, Z
 42a:	88 70       	andi	r24, 0x08	; 8
 42c:	80 83       	st	Z, r24
 42e:	05 c0       	rjmp	.+10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 430:	e1 e9       	ldi	r30, 0x91	; 145
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	80 81       	ld	r24, Z
 436:	83 60       	ori	r24, 0x03	; 3
 438:	80 83       	st	Z, r24
 43a:	28 e5       	ldi	r18, 0x58	; 88
 43c:	39 e3       	ldi	r19, 0x39	; 57
 43e:	44 e7       	ldi	r20, 0x74	; 116
 440:	5f e3       	ldi	r21, 0x3F	; 63
 442:	c7 01       	movw	r24, r14
 444:	b6 01       	movw	r22, r12
 446:	03 d2       	rcall	.+1030   	; 0x84e <__cmpsf2>
 448:	88 23       	and	r24, r24
 44a:	3c f4       	brge	.+14     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 44c:	8f ef       	ldi	r24, 0xFF	; 255
 44e:	9f ef       	ldi	r25, 0xFF	; 255
 450:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 454:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 458:	23 c0       	rjmp	.+70     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 45a:	20 e0       	ldi	r18, 0x00	; 0
 45c:	34 e2       	ldi	r19, 0x24	; 36
 45e:	44 ef       	ldi	r20, 0xF4	; 244
 460:	56 e4       	ldi	r21, 0x46	; 70
 462:	c7 01       	movw	r24, r14
 464:	b6 01       	movw	r22, r12
 466:	05 d3       	rcall	.+1546   	; 0xa72 <__gesf2>
 468:	18 16       	cp	r1, r24
 46a:	2c f4       	brge	.+10     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46c:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 470:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 474:	15 c0       	rjmp	.+42     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 476:	20 e0       	ldi	r18, 0x00	; 0
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	40 e0       	ldi	r20, 0x00	; 0
 47c:	53 e4       	ldi	r21, 0x43	; 67
 47e:	c7 01       	movw	r24, r14
 480:	b6 01       	movw	r22, r12
 482:	fb d2       	rcall	.+1526   	; 0xa7a <__mulsf3>
 484:	9b 01       	movw	r18, r22
 486:	ac 01       	movw	r20, r24
 488:	60 e0       	ldi	r22, 0x00	; 0
 48a:	74 e2       	ldi	r23, 0x24	; 36
 48c:	84 ef       	ldi	r24, 0xF4	; 244
 48e:	9a e4       	ldi	r25, 0x4A	; 74
 490:	e2 d1       	rcall	.+964    	; 0x856 <__divsf3>
 492:	49 d2       	rcall	.+1170   	; 0x926 <__fixsfsi>
 494:	61 50       	subi	r22, 0x01	; 1
 496:	71 09       	sbc	r23, r1
 498:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 49c:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 4a0:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 4a4:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 4a8:	c0 92 2d 03 	sts	0x032D, r12	; 0x80032d <current_frequency.1818>
 4ac:	d0 92 2e 03 	sts	0x032E, r13	; 0x80032e <current_frequency.1818+0x1>
 4b0:	e0 92 2f 03 	sts	0x032F, r14	; 0x80032f <current_frequency.1818+0x2>
 4b4:	f0 92 30 03 	sts	0x0330, r15	; 0x800330 <current_frequency.1818+0x3>
 4b8:	ff 90       	pop	r15
 4ba:	ef 90       	pop	r14
 4bc:	df 90       	pop	r13
 4be:	cf 90       	pop	r12
 4c0:	08 95       	ret

000004c2 <PWM_on>:
 4c2:	80 e4       	ldi	r24, 0x40	; 64
 4c4:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 4c8:	8b e0       	ldi	r24, 0x0B	; 11
 4ca:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
 4ce:	60 e0       	ldi	r22, 0x00	; 0
 4d0:	70 e0       	ldi	r23, 0x00	; 0
 4d2:	cb 01       	movw	r24, r22
 4d4:	8b cf       	rjmp	.-234    	; 0x3ec <set_PWM>
 4d6:	08 95       	ret

000004d8 <TimerSet>:
 4d8:	60 93 ce 01 	sts	0x01CE, r22	; 0x8001ce <_avr_timer_M>
 4dc:	70 93 cf 01 	sts	0x01CF, r23	; 0x8001cf <_avr_timer_M+0x1>
 4e0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <_avr_timer_M+0x2>
 4e4:	90 93 d1 01 	sts	0x01D1, r25	; 0x8001d1 <_avr_timer_M+0x3>
 4e8:	60 93 3a 03 	sts	0x033A, r22	; 0x80033a <_avr_timer_cntcurr>
 4ec:	70 93 3b 03 	sts	0x033B, r23	; 0x80033b <_avr_timer_cntcurr+0x1>
 4f0:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <_avr_timer_cntcurr+0x2>
 4f4:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <_avr_timer_cntcurr+0x3>
 4f8:	08 95       	ret

000004fa <TimerOn>:
 4fa:	8b e0       	ldi	r24, 0x0B	; 11
 4fc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 500:	8d e7       	ldi	r24, 0x7D	; 125
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 508:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 50c:	82 e0       	ldi	r24, 0x02	; 2
 50e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 512:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 516:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 51a:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <_avr_timer_M>
 51e:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <_avr_timer_M+0x1>
 522:	a0 91 d0 01 	lds	r26, 0x01D0	; 0x8001d0 <_avr_timer_M+0x2>
 526:	b0 91 d1 01 	lds	r27, 0x01D1	; 0x8001d1 <_avr_timer_M+0x3>
 52a:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <_avr_timer_cntcurr>
 52e:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <_avr_timer_cntcurr+0x1>
 532:	a0 93 3c 03 	sts	0x033C, r26	; 0x80033c <_avr_timer_cntcurr+0x2>
 536:	b0 93 3d 03 	sts	0x033D, r27	; 0x80033d <_avr_timer_cntcurr+0x3>
 53a:	8f b7       	in	r24, 0x3f	; 63
 53c:	80 68       	ori	r24, 0x80	; 128
 53e:	8f bf       	out	0x3f, r24	; 63
 540:	08 95       	ret

00000542 <__vector_13>:
}

// In our approach, the C programmer does not touch this ISR, but rather TimerISR()
ISR(TIMER1_COMPA_vect)
{
 542:	1f 92       	push	r1
 544:	0f 92       	push	r0
 546:	0f b6       	in	r0, 0x3f	; 63
 548:	0f 92       	push	r0
 54a:	11 24       	eor	r1, r1
 54c:	8f 93       	push	r24
 54e:	9f 93       	push	r25
 550:	af 93       	push	r26
 552:	bf 93       	push	r27
	// CPU automatically calls when TCNT0 == OCR0 (every 1 ms per TimerOn settings)
	_avr_timer_cntcurr--; 			// Count down to 0 rather than up to TOP
 554:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <_avr_timer_cntcurr>
 558:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <_avr_timer_cntcurr+0x1>
 55c:	a0 91 3c 03 	lds	r26, 0x033C	; 0x80033c <_avr_timer_cntcurr+0x2>
 560:	b0 91 3d 03 	lds	r27, 0x033D	; 0x80033d <_avr_timer_cntcurr+0x3>
 564:	01 97       	sbiw	r24, 0x01	; 1
 566:	a1 09       	sbc	r26, r1
 568:	b1 09       	sbc	r27, r1
 56a:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <_avr_timer_cntcurr>
 56e:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <_avr_timer_cntcurr+0x1>
 572:	a0 93 3c 03 	sts	0x033C, r26	; 0x80033c <_avr_timer_cntcurr+0x2>
 576:	b0 93 3d 03 	sts	0x033D, r27	; 0x80033d <_avr_timer_cntcurr+0x3>
	if (_avr_timer_cntcurr == 0) { 	// results in a more efficient compare
 57a:	89 2b       	or	r24, r25
 57c:	8a 2b       	or	r24, r26
 57e:	8b 2b       	or	r24, r27
 580:	99 f4       	brne	.+38     	; 0x5a8 <__vector_13+0x66>
void TimerOff() {
	TCCR1B 	= 0x00; // bit3bit2bit1bit0=0000: timer off
}

void TimerISR() {
	TimerFlag = 1;
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <TimerFlag>
{
	// CPU automatically calls when TCNT0 == OCR0 (every 1 ms per TimerOn settings)
	_avr_timer_cntcurr--; 			// Count down to 0 rather than up to TOP
	if (_avr_timer_cntcurr == 0) { 	// results in a more efficient compare
		TimerISR(); 				// Call the ISR that the user uses
		_avr_timer_cntcurr = _avr_timer_M;
 588:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <_avr_timer_M>
 58c:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <_avr_timer_M+0x1>
 590:	a0 91 d0 01 	lds	r26, 0x01D0	; 0x8001d0 <_avr_timer_M+0x2>
 594:	b0 91 d1 01 	lds	r27, 0x01D1	; 0x8001d1 <_avr_timer_M+0x3>
 598:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <_avr_timer_cntcurr>
 59c:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <_avr_timer_cntcurr+0x1>
 5a0:	a0 93 3c 03 	sts	0x033C, r26	; 0x80033c <_avr_timer_cntcurr+0x2>
 5a4:	b0 93 3d 03 	sts	0x033D, r27	; 0x80033d <_avr_timer_cntcurr+0x3>
	}
}
 5a8:	bf 91       	pop	r27
 5aa:	af 91       	pop	r26
 5ac:	9f 91       	pop	r25
 5ae:	8f 91       	pop	r24
 5b0:	0f 90       	pop	r0
 5b2:	0f be       	out	0x3f, r0	; 63
 5b4:	0f 90       	pop	r0
 5b6:	1f 90       	pop	r1
 5b8:	18 95       	reti

000005ba <ticksm>:
double krusty [51] = {1174.66, 1108.73, 1046.50, 987.77, 0, 783.99, 587.33, 0, 783.99, 987.77, 0, 783.99, 1174.66, 0, 987.77, 1567.98, 1479.98, 1567.98, 1760.00, 1567.95, 1479.98, 1567.98, 0,
1174.66, 987.77, 0, 783.99, 739.99, 0, 659.25, 739.99, 0, 783.99, 880.00, 0, 987.77, 1046.50, 987.77, 880.00, 1174.66, 1174.66, 1108.73, 1174.66, 1174.66, 1318.51, 1479.98, 1479.98, 1174.66, 1046.50, 1046.50, 880.00, /*987.77, 987.77, 987.77 ,739.99, 0, 1587.33, 987.77, 0, 783.99, 587.33, 587.33, 587.33,*/};
enum States {Start, Wait, On, OnLong, Off} state;
void ticksm()
{
	switch(state)
 5ba:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <state>
 5be:	82 30       	cpi	r24, 0x02	; 2
 5c0:	f9 f0       	breq	.+62     	; 0x600 <ticksm+0x46>
 5c2:	28 f4       	brcc	.+10     	; 0x5ce <ticksm+0x14>
 5c4:	88 23       	and	r24, r24
 5c6:	49 f0       	breq	.+18     	; 0x5da <ticksm+0x20>
 5c8:	81 30       	cpi	r24, 0x01	; 1
 5ca:	59 f0       	breq	.+22     	; 0x5e2 <ticksm+0x28>
 5cc:	4b c0       	rjmp	.+150    	; 0x664 <ticksm+0xaa>
 5ce:	83 30       	cpi	r24, 0x03	; 3
 5d0:	39 f1       	breq	.+78     	; 0x620 <ticksm+0x66>
 5d2:	84 30       	cpi	r24, 0x04	; 4
 5d4:	09 f4       	brne	.+2      	; 0x5d8 <ticksm+0x1e>
 5d6:	40 c0       	rjmp	.+128    	; 0x658 <ticksm+0x9e>
 5d8:	45 c0       	rjmp	.+138    	; 0x664 <ticksm+0xaa>
	{
		case Start:
		state = Wait;
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <state>
		break;
 5e0:	55 c0       	rjmp	.+170    	; 0x68c <ticksm+0xd2>
		case Wait:
		if(a == 0x01)
 5e2:	80 91 37 03 	lds	r24, 0x0337	; 0x800337 <a>
 5e6:	81 30       	cpi	r24, 0x01	; 1
 5e8:	21 f4       	brne	.+8      	; 0x5f2 <ticksm+0x38>
		{
			state = On;
 5ea:	82 e0       	ldi	r24, 0x02	; 2
 5ec:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <state>
 5f0:	56 c0       	rjmp	.+172    	; 0x69e <ticksm+0xe4>
		}
		else if(a == 0x02)
 5f2:	82 30       	cpi	r24, 0x02	; 2
 5f4:	09 f0       	breq	.+2      	; 0x5f8 <ticksm+0x3e>
 5f6:	4a c0       	rjmp	.+148    	; 0x68c <ticksm+0xd2>
		{
			state = OnLong;
 5f8:	83 e0       	ldi	r24, 0x03	; 3
 5fa:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <state>
 5fe:	68 c0       	rjmp	.+208    	; 0x6d0 <ticksm+0x116>
		{
			state = Wait;
		}
		break;
		case On:
		if(i < max)
 600:	20 91 31 03 	lds	r18, 0x0331	; 0x800331 <i>
 604:	30 91 32 03 	lds	r19, 0x0332	; 0x800332 <i+0x1>
 608:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <max>
 60c:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <max+0x1>
 610:	28 17       	cp	r18, r24
 612:	39 07       	cpc	r19, r25
 614:	0c f4       	brge	.+2      	; 0x618 <ticksm+0x5e>
 616:	43 c0       	rjmp	.+134    	; 0x69e <ticksm+0xe4>
		{
			state = On;
		}
		else
		{
			state = Off;
 618:	84 e0       	ldi	r24, 0x04	; 4
 61a:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <state>
 61e:	71 c0       	rjmp	.+226    	; 0x702 <ticksm+0x148>
		}
		break;
		case OnLong:
		if(a == 0x04)
 620:	80 91 37 03 	lds	r24, 0x0337	; 0x800337 <a>
 624:	84 30       	cpi	r24, 0x04	; 4
 626:	19 f4       	brne	.+6      	; 0x62e <ticksm+0x74>
		{
			state = Off;
 628:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <state>
 62c:	6a c0       	rjmp	.+212    	; 0x702 <ticksm+0x148>
		}
		else if(i < max)
 62e:	20 91 31 03 	lds	r18, 0x0331	; 0x800331 <i>
 632:	30 91 32 03 	lds	r19, 0x0332	; 0x800332 <i+0x1>
 636:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <max>
 63a:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <max+0x1>
 63e:	28 17       	cp	r18, r24
 640:	39 07       	cpc	r19, r25
 642:	0c f4       	brge	.+2      	; 0x646 <ticksm+0x8c>
 644:	45 c0       	rjmp	.+138    	; 0x6d0 <ticksm+0x116>
		{
			state = OnLong;
		}
		else
		{
			i= 3;
 646:	83 e0       	ldi	r24, 0x03	; 3
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	90 93 32 03 	sts	0x0332, r25	; 0x800332 <i+0x1>
 64e:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <i>
			state = OnLong;
 652:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <state>
 656:	3c c0       	rjmp	.+120    	; 0x6d0 <ticksm+0x116>
		}
		
		break;
		case Off:
		if((~PINA & 0x01) == 0x00)
 658:	00 9b       	sbis	0x00, 0	; 0
 65a:	53 c0       	rjmp	.+166    	; 0x702 <ticksm+0x148>
		{
			state = Wait;
 65c:	81 e0       	ldi	r24, 0x01	; 1
 65e:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <state>
 662:	14 c0       	rjmp	.+40     	; 0x68c <ticksm+0xd2>
		{
			state = Off;
		}
		break;
	}
	switch(state)
 664:	82 30       	cpi	r24, 0x02	; 2
 666:	d9 f0       	breq	.+54     	; 0x69e <ticksm+0xe4>
 668:	30 f4       	brcc	.+12     	; 0x676 <ticksm+0xbc>
 66a:	88 23       	and	r24, r24
 66c:	51 f0       	breq	.+20     	; 0x682 <ticksm+0xc8>
 66e:	81 30       	cpi	r24, 0x01	; 1
 670:	09 f0       	breq	.+2      	; 0x674 <ticksm+0xba>
 672:	4b c0       	rjmp	.+150    	; 0x70a <ticksm+0x150>
 674:	0b c0       	rjmp	.+22     	; 0x68c <ticksm+0xd2>
 676:	83 30       	cpi	r24, 0x03	; 3
 678:	59 f1       	breq	.+86     	; 0x6d0 <ticksm+0x116>
 67a:	84 30       	cpi	r24, 0x04	; 4
 67c:	09 f0       	breq	.+2      	; 0x680 <ticksm+0xc6>
 67e:	45 c0       	rjmp	.+138    	; 0x70a <ticksm+0x150>
 680:	40 c0       	rjmp	.+128    	; 0x702 <ticksm+0x148>
	{
		case Start:
		i = 0;
 682:	10 92 32 03 	sts	0x0332, r1	; 0x800332 <i+0x1>
 686:	10 92 31 03 	sts	0x0331, r1	; 0x800331 <i>
		break;
 68a:	08 95       	ret
		case Wait:
		i = 0;
 68c:	10 92 32 03 	sts	0x0332, r1	; 0x800332 <i+0x1>
 690:	10 92 31 03 	sts	0x0331, r1	; 0x800331 <i>
		set_PWM(0);
 694:	60 e0       	ldi	r22, 0x00	; 0
 696:	70 e0       	ldi	r23, 0x00	; 0
 698:	cb 01       	movw	r24, r22
 69a:	a8 ce       	rjmp	.-688    	; 0x3ec <set_PWM>
		break;
 69c:	08 95       	ret
		case On:
		set_PWM(krusty[i]);
 69e:	e0 91 31 03 	lds	r30, 0x0331	; 0x800331 <i>
 6a2:	f0 91 32 03 	lds	r31, 0x0332	; 0x800332 <i+0x1>
 6a6:	ee 0f       	add	r30, r30
 6a8:	ff 1f       	adc	r31, r31
 6aa:	ee 0f       	add	r30, r30
 6ac:	ff 1f       	adc	r31, r31
 6ae:	e0 50       	subi	r30, 0x00	; 0
 6b0:	ff 4f       	sbci	r31, 0xFF	; 255
 6b2:	60 81       	ld	r22, Z
 6b4:	71 81       	ldd	r23, Z+1	; 0x01
 6b6:	82 81       	ldd	r24, Z+2	; 0x02
 6b8:	93 81       	ldd	r25, Z+3	; 0x03
 6ba:	98 de       	rcall	.-720    	; 0x3ec <set_PWM>
		//set_PWM(platinum[i]);
		i++;
 6bc:	80 91 31 03 	lds	r24, 0x0331	; 0x800331 <i>
 6c0:	90 91 32 03 	lds	r25, 0x0332	; 0x800332 <i+0x1>
 6c4:	01 96       	adiw	r24, 0x01	; 1
 6c6:	90 93 32 03 	sts	0x0332, r25	; 0x800332 <i+0x1>
 6ca:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <i>
		break;
 6ce:	08 95       	ret
		case OnLong:
		set_PWM(krusty[i]);
 6d0:	e0 91 31 03 	lds	r30, 0x0331	; 0x800331 <i>
 6d4:	f0 91 32 03 	lds	r31, 0x0332	; 0x800332 <i+0x1>
 6d8:	ee 0f       	add	r30, r30
 6da:	ff 1f       	adc	r31, r31
 6dc:	ee 0f       	add	r30, r30
 6de:	ff 1f       	adc	r31, r31
 6e0:	e0 50       	subi	r30, 0x00	; 0
 6e2:	ff 4f       	sbci	r31, 0xFF	; 255
 6e4:	60 81       	ld	r22, Z
 6e6:	71 81       	ldd	r23, Z+1	; 0x01
 6e8:	82 81       	ldd	r24, Z+2	; 0x02
 6ea:	93 81       	ldd	r25, Z+3	; 0x03
 6ec:	7f de       	rcall	.-770    	; 0x3ec <set_PWM>
		//set_PWM(platinum[i]);
		i++;
 6ee:	80 91 31 03 	lds	r24, 0x0331	; 0x800331 <i>
 6f2:	90 91 32 03 	lds	r25, 0x0332	; 0x800332 <i+0x1>
 6f6:	01 96       	adiw	r24, 0x01	; 1
 6f8:	90 93 32 03 	sts	0x0332, r25	; 0x800332 <i+0x1>
 6fc:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <i>
		break;
 700:	08 95       	ret
		case Off:
		set_PWM(0);
 702:	60 e0       	ldi	r22, 0x00	; 0
 704:	70 e0       	ldi	r23, 0x00	; 0
 706:	cb 01       	movw	r24, r22
 708:	71 ce       	rjmp	.-798    	; 0x3ec <set_PWM>
 70a:	08 95       	ret

0000070c <main>:
								//A = 0x01, B = 0x02, Select = 0x04, AB = 0x04, Start = 0x08, STARTSELECT = 0x28, UP = 0x10, DOWN = 0x20, LEFT = 0x40, RIGHT = 0x80
int main(void)					//SELECTA = 0x08,  //SELECTB = 0x0C, //STARTA = 0x01, STARTB = 0x18. //UPHARDPRESS = 0x80, //DOWNHARDPRESS = 0x80.
{
	
	
    DDRA = 0x03;
 70c:	83 e0       	ldi	r24, 0x03	; 3
 70e:	81 b9       	out	0x01, r24	; 1
	DDRB = 0xFF;
 710:	cf ef       	ldi	r28, 0xFF	; 255
 712:	c4 b9       	out	0x04, r28	; 4
	PORTA = 0xFC;
 714:	8c ef       	ldi	r24, 0xFC	; 252
 716:	82 b9       	out	0x02, r24	; 2
	PORTB = 0x00;
 718:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF;
 71a:	c7 b9       	out	0x07, r28	; 7
	PORTC = 0x00;
 71c:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF;
 71e:	ca b9       	out	0x0a, r28	; 10
	PORTD = 0x00;
 720:	1b b8       	out	0x0b, r1	; 11

	
	PWM_on();
 722:	cf de       	rcall	.-610    	; 0x4c2 <PWM_on>
	static task task1;
	task *tasks[] = { & task1};
	task1.state = -1;
 724:	e2 e2       	ldi	r30, 0x22	; 34
 726:	f3 e0       	ldi	r31, 0x03	; 3
 728:	c0 83       	st	Z, r28
	task1.period = 1;
 72a:	81 e0       	ldi	r24, 0x01	; 1
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	a0 e0       	ldi	r26, 0x00	; 0
 730:	b0 e0       	ldi	r27, 0x00	; 0
 732:	81 83       	std	Z+1, r24	; 0x01
 734:	92 83       	std	Z+2, r25	; 0x02
 736:	a3 83       	std	Z+3, r26	; 0x03
 738:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = 1;
 73a:	85 83       	std	Z+5, r24	; 0x05
 73c:	96 83       	std	Z+6, r25	; 0x06
 73e:	a7 83       	std	Z+7, r26	; 0x07
 740:	b0 87       	std	Z+8, r27	; 0x08
	task1.TickFct = &SM2tick;
 742:	81 eb       	ldi	r24, 0xB1	; 177
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	92 87       	std	Z+10, r25	; 0x0a
	LCD_Init();
 748:	81 87       	std	Z+9, r24	; 0x09
	LCD_Clear();
 74a:	de dc       	rcall	.-1604   	; 0x108 <LCD_Init>
 74c:	05 dd       	rcall	.-1526   	; 0x158 <LCD_Clear>
	LCD_Custom_Char(0, CharacterLeft);  /* Build Character1 at position 0 */
 74e:	6a ee       	ldi	r22, 0xEA	; 234
 750:	71 e0       	ldi	r23, 0x01	; 1
 752:	80 e0       	ldi	r24, 0x00	; 0
 754:	32 de       	rcall	.-924    	; 0x3ba <LCD_Custom_Char>
	LCD_Custom_Char(1, CharacterDown);  /* Build Character2 at position 1 */
 756:	62 ee       	ldi	r22, 0xE2	; 226
 758:	71 e0       	ldi	r23, 0x01	; 1
 75a:	81 e0       	ldi	r24, 0x01	; 1
 75c:	2e de       	rcall	.-932    	; 0x3ba <LCD_Custom_Char>
	LCD_Custom_Char(2, CharacterUp);  /* Build Character3 at position 2 */
 75e:	6a ed       	ldi	r22, 0xDA	; 218
 760:	71 e0       	ldi	r23, 0x01	; 1
 762:	82 e0       	ldi	r24, 0x02	; 2
 764:	2a de       	rcall	.-940    	; 0x3ba <LCD_Custom_Char>
	LCD_Custom_Char(3, CharacterRight);  /* Build Character4 at position 3 */
 766:	62 ed       	ldi	r22, 0xD2	; 210
 768:	71 e0       	ldi	r23, 0x01	; 1
 76a:	83 e0       	ldi	r24, 0x03	; 3
 76c:	26 de       	rcall	.-948    	; 0x3ba <LCD_Custom_Char>
	LCD_Custom_Char(4, Blank);
 76e:	6f e3       	ldi	r22, 0x3F	; 63
 770:	73 e0       	ldi	r23, 0x03	; 3
 772:	84 e0       	ldi	r24, 0x04	; 4
	
	unsigned timer_period = 1;
	unsigned long disp = 65;
	//unsigned long controller = 1;
	TimerSet(timer_period);
 774:	22 de       	rcall	.-956    	; 0x3ba <LCD_Custom_Char>
 776:	61 e0       	ldi	r22, 0x01	; 1
 778:	70 e0       	ldi	r23, 0x00	; 0
 77a:	80 e0       	ldi	r24, 0x00	; 0
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	ac de       	rcall	.-680    	; 0x4d8 <TimerSet>
	TimerOn();
 780:	bc de       	rcall	.-648    	; 0x4fa <TimerOn>
 782:	41 e4       	ldi	r20, 0x41	; 65
	LCD_Custom_Char(2, CharacterUp);  /* Build Character3 at position 2 */
	LCD_Custom_Char(3, CharacterRight);  /* Build Character4 at position 3 */
	LCD_Custom_Char(4, Blank);
	
	unsigned timer_period = 1;
	unsigned long disp = 65;
 784:	50 e0       	ldi	r21, 0x00	; 0
 786:	60 e0       	ldi	r22, 0x00	; 0
 788:	70 e0       	ldi	r23, 0x00	; 0
 78a:	02 e2       	ldi	r16, 0x22	; 34
    {
		if(disp >= 65)
		{
			ticksm();
			for (u = 0; u < 1; ++u){
				if (tasks[u]->elapsedTime == tasks[u]->period){
 78c:	13 e0       	ldi	r17, 0x03	; 3
 78e:	0f 2e       	mov	r0, r31
			
		}
		//if()
		
		
		PORTA = 0xF1;
 790:	f1 ef       	ldi	r31, 0xF1	; 241
 792:	ff 2e       	mov	r15, r31
 794:	f0 2d       	mov	r31, r0
		unsigned i = 0;
		while (i < 10){
			++i;
		}
		PORTA = 0xF0;
 796:	c0 ef       	ldi	r28, 0xF0	; 240
			PORTA = 0xF0;
			if ((~PINA & 0x10) == 0x10){
				a = a + 0x01;
				a = (a << i);
			}
			PORTA = 0xF2;
 798:	d2 ef       	ldi	r29, 0xF2	; 242
	TimerSet(timer_period);
	TimerOn();
	unsigned short u = 0;
    while (1) 
    {
		if(disp >= 65)
 79a:	41 34       	cpi	r20, 0x41	; 65
 79c:	51 05       	cpc	r21, r1
 79e:	61 05       	cpc	r22, r1
 7a0:	71 05       	cpc	r23, r1
 7a2:	90 f1       	brcs	.+100    	; 0x808 <main+0xfc>
		{
			ticksm();
 7a4:	0a df       	rcall	.-492    	; 0x5ba <ticksm>
 7a6:	d8 01       	movw	r26, r16
			for (u = 0; u < 1; ++u){
				if (tasks[u]->elapsedTime == tasks[u]->period){
 7a8:	15 96       	adiw	r26, 0x05	; 5
 7aa:	4d 91       	ld	r20, X+
 7ac:	5d 91       	ld	r21, X+
 7ae:	6d 91       	ld	r22, X+
 7b0:	7c 91       	ld	r23, X
 7b2:	18 97       	sbiw	r26, 0x08	; 8
 7b4:	11 96       	adiw	r26, 0x01	; 1
 7b6:	8d 91       	ld	r24, X+
 7b8:	9d 91       	ld	r25, X+
 7ba:	0d 90       	ld	r0, X+
 7bc:	bc 91       	ld	r27, X
 7be:	a0 2d       	mov	r26, r0
 7c0:	48 17       	cp	r20, r24
 7c2:	59 07       	cpc	r21, r25
 7c4:	6a 07       	cpc	r22, r26
 7c6:	7b 07       	cpc	r23, r27
 7c8:	81 f4       	brne	.+32     	; 0x7ea <main+0xde>
 7ca:	f8 01       	movw	r30, r16
					tasks[u]->state = tasks[u]->TickFct(tasks[u]->state);
 7cc:	80 81       	ld	r24, Z
 7ce:	01 84       	ldd	r0, Z+9	; 0x09
 7d0:	f2 85       	ldd	r31, Z+10	; 0x0a
 7d2:	e0 2d       	mov	r30, r0
 7d4:	08 2e       	mov	r0, r24
 7d6:	00 0c       	add	r0, r0
 7d8:	99 0b       	sbc	r25, r25
 7da:	09 95       	icall
 7dc:	d8 01       	movw	r26, r16
 7de:	8c 93       	st	X, r24
 7e0:	f8 01       	movw	r30, r16
					tasks[u]->elapsedTime = 0;
 7e2:	15 82       	std	Z+5, r1	; 0x05
 7e4:	16 82       	std	Z+6, r1	; 0x06
 7e6:	17 82       	std	Z+7, r1	; 0x07
 7e8:	10 86       	std	Z+8, r1	; 0x08
 7ea:	f8 01       	movw	r30, r16
				}
				tasks[u]->elapsedTime += 1;
 7ec:	85 81       	ldd	r24, Z+5	; 0x05
 7ee:	96 81       	ldd	r25, Z+6	; 0x06
 7f0:	a7 81       	ldd	r26, Z+7	; 0x07
 7f2:	b0 85       	ldd	r27, Z+8	; 0x08
 7f4:	01 96       	adiw	r24, 0x01	; 1
 7f6:	a1 1d       	adc	r26, r1
 7f8:	b1 1d       	adc	r27, r1
 7fa:	85 83       	std	Z+5, r24	; 0x05
 7fc:	96 83       	std	Z+6, r25	; 0x06
 7fe:	a7 83       	std	Z+7, r26	; 0x07
 800:	b0 87       	std	Z+8, r27	; 0x08
 802:	40 e0       	ldi	r20, 0x00	; 0
			}
			disp = 0;
 804:	50 e0       	ldi	r21, 0x00	; 0
 806:	ba 01       	movw	r22, r20
 808:	f2 b8       	out	0x02, r15	; 2
			
		}
		//if()
		
		
		PORTA = 0xF1;
 80a:	c2 b9       	out	0x02, r28	; 2
		unsigned i = 0;
		while (i < 10){
			++i;
		}
		PORTA = 0xF0;
 80c:	10 92 37 03 	sts	0x0337, r1	; 0x800337 <a>
		a = 0;
 810:	80 e0       	ldi	r24, 0x00	; 0
		for (unsigned i = 0; i < 8; ++i){
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	c2 b9       	out	0x02, r28	; 2
			PORTA = 0xF0;
 816:	04 99       	sbic	0x00, 4	; 0
			if ((~PINA & 0x10) == 0x10){
 818:	0a c0       	rjmp	.+20     	; 0x82e <main+0x122>
 81a:	20 91 37 03 	lds	r18, 0x0337	; 0x800337 <a>
				a = a + 0x01;
				a = (a << i);
 81e:	2f 5f       	subi	r18, 0xFF	; 255
 820:	08 2e       	mov	r0, r24
 822:	01 c0       	rjmp	.+2      	; 0x826 <main+0x11a>
 824:	22 0f       	add	r18, r18
 826:	0a 94       	dec	r0
 828:	ea f7       	brpl	.-6      	; 0x824 <main+0x118>
 82a:	20 93 37 03 	sts	0x0337, r18	; 0x800337 <a>
 82e:	d2 b9       	out	0x02, r29	; 2
			}
			PORTA = 0xF2;
 830:	01 96       	adiw	r24, 0x01	; 1
		while (i < 10){
			++i;
		}
		PORTA = 0xF0;
		a = 0;
		for (unsigned i = 0; i < 8; ++i){
 832:	88 30       	cpi	r24, 0x08	; 8
 834:	91 05       	cpc	r25, r1
 836:	71 f7       	brne	.-36     	; 0x814 <main+0x108>
 838:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <TimerFlag>
			PORTA = 0xF2;
		}
		//PORTB = a;
		
			
			while(!TimerFlag);
 83c:	88 23       	and	r24, r24
 83e:	e1 f3       	breq	.-8      	; 0x838 <main+0x12c>
 840:	10 92 3e 03 	sts	0x033E, r1	; 0x80033e <TimerFlag>
			TimerFlag = 0;
 844:	4f 5f       	subi	r20, 0xFF	; 255
			disp += timer_period;
 846:	5f 4f       	sbci	r21, 0xFF	; 255
 848:	6f 4f       	sbci	r22, 0xFF	; 255
 84a:	7f 4f       	sbci	r23, 0xFF	; 255
 84c:	a6 cf       	rjmp	.-180    	; 0x79a <main+0x8e>

0000084e <__cmpsf2>:
		
    }
 84e:	9c d0       	rcall	.+312    	; 0x988 <__fp_cmp>
 850:	08 f4       	brcc	.+2      	; 0x854 <__cmpsf2+0x6>
 852:	81 e0       	ldi	r24, 0x01	; 1
 854:	08 95       	ret

00000856 <__divsf3>:
 856:	0c d0       	rcall	.+24     	; 0x870 <__divsf3x>
 858:	d2 c0       	rjmp	.+420    	; 0x9fe <__fp_round>
 85a:	ca d0       	rcall	.+404    	; 0x9f0 <__fp_pscB>
 85c:	40 f0       	brcs	.+16     	; 0x86e <__divsf3+0x18>
 85e:	c1 d0       	rcall	.+386    	; 0x9e2 <__fp_pscA>
 860:	30 f0       	brcs	.+12     	; 0x86e <__divsf3+0x18>
 862:	21 f4       	brne	.+8      	; 0x86c <__divsf3+0x16>
 864:	5f 3f       	cpi	r21, 0xFF	; 255
 866:	19 f0       	breq	.+6      	; 0x86e <__divsf3+0x18>
 868:	b3 c0       	rjmp	.+358    	; 0x9d0 <__fp_inf>
 86a:	51 11       	cpse	r21, r1
 86c:	fc c0       	rjmp	.+504    	; 0xa66 <__fp_szero>
 86e:	b6 c0       	rjmp	.+364    	; 0x9dc <__fp_nan>

00000870 <__divsf3x>:
 870:	d7 d0       	rcall	.+430    	; 0xa20 <__fp_split3>
 872:	98 f3       	brcs	.-26     	; 0x85a <__divsf3+0x4>

00000874 <__divsf3_pse>:
 874:	99 23       	and	r25, r25
 876:	c9 f3       	breq	.-14     	; 0x86a <__divsf3+0x14>
 878:	55 23       	and	r21, r21
 87a:	b1 f3       	breq	.-20     	; 0x868 <__divsf3+0x12>
 87c:	95 1b       	sub	r25, r21
 87e:	55 0b       	sbc	r21, r21
 880:	bb 27       	eor	r27, r27
 882:	aa 27       	eor	r26, r26
 884:	62 17       	cp	r22, r18
 886:	73 07       	cpc	r23, r19
 888:	84 07       	cpc	r24, r20
 88a:	38 f0       	brcs	.+14     	; 0x89a <__divsf3_pse+0x26>
 88c:	9f 5f       	subi	r25, 0xFF	; 255
 88e:	5f 4f       	sbci	r21, 0xFF	; 255
 890:	22 0f       	add	r18, r18
 892:	33 1f       	adc	r19, r19
 894:	44 1f       	adc	r20, r20
 896:	aa 1f       	adc	r26, r26
 898:	a9 f3       	breq	.-22     	; 0x884 <__divsf3_pse+0x10>
 89a:	33 d0       	rcall	.+102    	; 0x902 <__divsf3_pse+0x8e>
 89c:	0e 2e       	mov	r0, r30
 89e:	3a f0       	brmi	.+14     	; 0x8ae <__divsf3_pse+0x3a>
 8a0:	e0 e8       	ldi	r30, 0x80	; 128
 8a2:	30 d0       	rcall	.+96     	; 0x904 <__divsf3_pse+0x90>
 8a4:	91 50       	subi	r25, 0x01	; 1
 8a6:	50 40       	sbci	r21, 0x00	; 0
 8a8:	e6 95       	lsr	r30
 8aa:	00 1c       	adc	r0, r0
 8ac:	ca f7       	brpl	.-14     	; 0x8a0 <__divsf3_pse+0x2c>
 8ae:	29 d0       	rcall	.+82     	; 0x902 <__divsf3_pse+0x8e>
 8b0:	fe 2f       	mov	r31, r30
 8b2:	27 d0       	rcall	.+78     	; 0x902 <__divsf3_pse+0x8e>
 8b4:	66 0f       	add	r22, r22
 8b6:	77 1f       	adc	r23, r23
 8b8:	88 1f       	adc	r24, r24
 8ba:	bb 1f       	adc	r27, r27
 8bc:	26 17       	cp	r18, r22
 8be:	37 07       	cpc	r19, r23
 8c0:	48 07       	cpc	r20, r24
 8c2:	ab 07       	cpc	r26, r27
 8c4:	b0 e8       	ldi	r27, 0x80	; 128
 8c6:	09 f0       	breq	.+2      	; 0x8ca <__divsf3_pse+0x56>
 8c8:	bb 0b       	sbc	r27, r27
 8ca:	80 2d       	mov	r24, r0
 8cc:	bf 01       	movw	r22, r30
 8ce:	ff 27       	eor	r31, r31
 8d0:	93 58       	subi	r25, 0x83	; 131
 8d2:	5f 4f       	sbci	r21, 0xFF	; 255
 8d4:	2a f0       	brmi	.+10     	; 0x8e0 <__divsf3_pse+0x6c>
 8d6:	9e 3f       	cpi	r25, 0xFE	; 254
 8d8:	51 05       	cpc	r21, r1
 8da:	68 f0       	brcs	.+26     	; 0x8f6 <__divsf3_pse+0x82>
 8dc:	79 c0       	rjmp	.+242    	; 0x9d0 <__fp_inf>
 8de:	c3 c0       	rjmp	.+390    	; 0xa66 <__fp_szero>
 8e0:	5f 3f       	cpi	r21, 0xFF	; 255
 8e2:	ec f3       	brlt	.-6      	; 0x8de <__divsf3_pse+0x6a>
 8e4:	98 3e       	cpi	r25, 0xE8	; 232
 8e6:	dc f3       	brlt	.-10     	; 0x8de <__divsf3_pse+0x6a>
 8e8:	86 95       	lsr	r24
 8ea:	77 95       	ror	r23
 8ec:	67 95       	ror	r22
 8ee:	b7 95       	ror	r27
 8f0:	f7 95       	ror	r31
 8f2:	9f 5f       	subi	r25, 0xFF	; 255
 8f4:	c9 f7       	brne	.-14     	; 0x8e8 <__divsf3_pse+0x74>
 8f6:	88 0f       	add	r24, r24
 8f8:	91 1d       	adc	r25, r1
 8fa:	96 95       	lsr	r25
 8fc:	87 95       	ror	r24
 8fe:	97 f9       	bld	r25, 7
 900:	08 95       	ret
 902:	e1 e0       	ldi	r30, 0x01	; 1
 904:	66 0f       	add	r22, r22
 906:	77 1f       	adc	r23, r23
 908:	88 1f       	adc	r24, r24
 90a:	bb 1f       	adc	r27, r27
 90c:	62 17       	cp	r22, r18
 90e:	73 07       	cpc	r23, r19
 910:	84 07       	cpc	r24, r20
 912:	ba 07       	cpc	r27, r26
 914:	20 f0       	brcs	.+8      	; 0x91e <__divsf3_pse+0xaa>
 916:	62 1b       	sub	r22, r18
 918:	73 0b       	sbc	r23, r19
 91a:	84 0b       	sbc	r24, r20
 91c:	ba 0b       	sbc	r27, r26
 91e:	ee 1f       	adc	r30, r30
 920:	88 f7       	brcc	.-30     	; 0x904 <__divsf3_pse+0x90>
 922:	e0 95       	com	r30
 924:	08 95       	ret

00000926 <__fixsfsi>:
 926:	04 d0       	rcall	.+8      	; 0x930 <__fixunssfsi>
 928:	68 94       	set
 92a:	b1 11       	cpse	r27, r1
 92c:	9c c0       	rjmp	.+312    	; 0xa66 <__fp_szero>
 92e:	08 95       	ret

00000930 <__fixunssfsi>:
 930:	7f d0       	rcall	.+254    	; 0xa30 <__fp_splitA>
 932:	88 f0       	brcs	.+34     	; 0x956 <__fixunssfsi+0x26>
 934:	9f 57       	subi	r25, 0x7F	; 127
 936:	90 f0       	brcs	.+36     	; 0x95c <__fixunssfsi+0x2c>
 938:	b9 2f       	mov	r27, r25
 93a:	99 27       	eor	r25, r25
 93c:	b7 51       	subi	r27, 0x17	; 23
 93e:	a0 f0       	brcs	.+40     	; 0x968 <__fixunssfsi+0x38>
 940:	d1 f0       	breq	.+52     	; 0x976 <__fixunssfsi+0x46>
 942:	66 0f       	add	r22, r22
 944:	77 1f       	adc	r23, r23
 946:	88 1f       	adc	r24, r24
 948:	99 1f       	adc	r25, r25
 94a:	1a f0       	brmi	.+6      	; 0x952 <__fixunssfsi+0x22>
 94c:	ba 95       	dec	r27
 94e:	c9 f7       	brne	.-14     	; 0x942 <__fixunssfsi+0x12>
 950:	12 c0       	rjmp	.+36     	; 0x976 <__fixunssfsi+0x46>
 952:	b1 30       	cpi	r27, 0x01	; 1
 954:	81 f0       	breq	.+32     	; 0x976 <__fixunssfsi+0x46>
 956:	86 d0       	rcall	.+268    	; 0xa64 <__fp_zero>
 958:	b1 e0       	ldi	r27, 0x01	; 1
 95a:	08 95       	ret
 95c:	83 c0       	rjmp	.+262    	; 0xa64 <__fp_zero>
 95e:	67 2f       	mov	r22, r23
 960:	78 2f       	mov	r23, r24
 962:	88 27       	eor	r24, r24
 964:	b8 5f       	subi	r27, 0xF8	; 248
 966:	39 f0       	breq	.+14     	; 0x976 <__fixunssfsi+0x46>
 968:	b9 3f       	cpi	r27, 0xF9	; 249
 96a:	cc f3       	brlt	.-14     	; 0x95e <__fixunssfsi+0x2e>
 96c:	86 95       	lsr	r24
 96e:	77 95       	ror	r23
 970:	67 95       	ror	r22
 972:	b3 95       	inc	r27
 974:	d9 f7       	brne	.-10     	; 0x96c <__fixunssfsi+0x3c>
 976:	3e f4       	brtc	.+14     	; 0x986 <__fixunssfsi+0x56>
 978:	90 95       	com	r25
 97a:	80 95       	com	r24
 97c:	70 95       	com	r23
 97e:	61 95       	neg	r22
 980:	7f 4f       	sbci	r23, 0xFF	; 255
 982:	8f 4f       	sbci	r24, 0xFF	; 255
 984:	9f 4f       	sbci	r25, 0xFF	; 255
 986:	08 95       	ret

00000988 <__fp_cmp>:
 988:	99 0f       	add	r25, r25
 98a:	00 08       	sbc	r0, r0
 98c:	55 0f       	add	r21, r21
 98e:	aa 0b       	sbc	r26, r26
 990:	e0 e8       	ldi	r30, 0x80	; 128
 992:	fe ef       	ldi	r31, 0xFE	; 254
 994:	16 16       	cp	r1, r22
 996:	17 06       	cpc	r1, r23
 998:	e8 07       	cpc	r30, r24
 99a:	f9 07       	cpc	r31, r25
 99c:	c0 f0       	brcs	.+48     	; 0x9ce <__fp_cmp+0x46>
 99e:	12 16       	cp	r1, r18
 9a0:	13 06       	cpc	r1, r19
 9a2:	e4 07       	cpc	r30, r20
 9a4:	f5 07       	cpc	r31, r21
 9a6:	98 f0       	brcs	.+38     	; 0x9ce <__fp_cmp+0x46>
 9a8:	62 1b       	sub	r22, r18
 9aa:	73 0b       	sbc	r23, r19
 9ac:	84 0b       	sbc	r24, r20
 9ae:	95 0b       	sbc	r25, r21
 9b0:	39 f4       	brne	.+14     	; 0x9c0 <__fp_cmp+0x38>
 9b2:	0a 26       	eor	r0, r26
 9b4:	61 f0       	breq	.+24     	; 0x9ce <__fp_cmp+0x46>
 9b6:	23 2b       	or	r18, r19
 9b8:	24 2b       	or	r18, r20
 9ba:	25 2b       	or	r18, r21
 9bc:	21 f4       	brne	.+8      	; 0x9c6 <__fp_cmp+0x3e>
 9be:	08 95       	ret
 9c0:	0a 26       	eor	r0, r26
 9c2:	09 f4       	brne	.+2      	; 0x9c6 <__fp_cmp+0x3e>
 9c4:	a1 40       	sbci	r26, 0x01	; 1
 9c6:	a6 95       	lsr	r26
 9c8:	8f ef       	ldi	r24, 0xFF	; 255
 9ca:	81 1d       	adc	r24, r1
 9cc:	81 1d       	adc	r24, r1
 9ce:	08 95       	ret

000009d0 <__fp_inf>:
 9d0:	97 f9       	bld	r25, 7
 9d2:	9f 67       	ori	r25, 0x7F	; 127
 9d4:	80 e8       	ldi	r24, 0x80	; 128
 9d6:	70 e0       	ldi	r23, 0x00	; 0
 9d8:	60 e0       	ldi	r22, 0x00	; 0
 9da:	08 95       	ret

000009dc <__fp_nan>:
 9dc:	9f ef       	ldi	r25, 0xFF	; 255
 9de:	80 ec       	ldi	r24, 0xC0	; 192
 9e0:	08 95       	ret

000009e2 <__fp_pscA>:
 9e2:	00 24       	eor	r0, r0
 9e4:	0a 94       	dec	r0
 9e6:	16 16       	cp	r1, r22
 9e8:	17 06       	cpc	r1, r23
 9ea:	18 06       	cpc	r1, r24
 9ec:	09 06       	cpc	r0, r25
 9ee:	08 95       	ret

000009f0 <__fp_pscB>:
 9f0:	00 24       	eor	r0, r0
 9f2:	0a 94       	dec	r0
 9f4:	12 16       	cp	r1, r18
 9f6:	13 06       	cpc	r1, r19
 9f8:	14 06       	cpc	r1, r20
 9fa:	05 06       	cpc	r0, r21
 9fc:	08 95       	ret

000009fe <__fp_round>:
 9fe:	09 2e       	mov	r0, r25
 a00:	03 94       	inc	r0
 a02:	00 0c       	add	r0, r0
 a04:	11 f4       	brne	.+4      	; 0xa0a <__fp_round+0xc>
 a06:	88 23       	and	r24, r24
 a08:	52 f0       	brmi	.+20     	; 0xa1e <__fp_round+0x20>
 a0a:	bb 0f       	add	r27, r27
 a0c:	40 f4       	brcc	.+16     	; 0xa1e <__fp_round+0x20>
 a0e:	bf 2b       	or	r27, r31
 a10:	11 f4       	brne	.+4      	; 0xa16 <__fp_round+0x18>
 a12:	60 ff       	sbrs	r22, 0
 a14:	04 c0       	rjmp	.+8      	; 0xa1e <__fp_round+0x20>
 a16:	6f 5f       	subi	r22, 0xFF	; 255
 a18:	7f 4f       	sbci	r23, 0xFF	; 255
 a1a:	8f 4f       	sbci	r24, 0xFF	; 255
 a1c:	9f 4f       	sbci	r25, 0xFF	; 255
 a1e:	08 95       	ret

00000a20 <__fp_split3>:
 a20:	57 fd       	sbrc	r21, 7
 a22:	90 58       	subi	r25, 0x80	; 128
 a24:	44 0f       	add	r20, r20
 a26:	55 1f       	adc	r21, r21
 a28:	59 f0       	breq	.+22     	; 0xa40 <__fp_splitA+0x10>
 a2a:	5f 3f       	cpi	r21, 0xFF	; 255
 a2c:	71 f0       	breq	.+28     	; 0xa4a <__fp_splitA+0x1a>
 a2e:	47 95       	ror	r20

00000a30 <__fp_splitA>:
 a30:	88 0f       	add	r24, r24
 a32:	97 fb       	bst	r25, 7
 a34:	99 1f       	adc	r25, r25
 a36:	61 f0       	breq	.+24     	; 0xa50 <__fp_splitA+0x20>
 a38:	9f 3f       	cpi	r25, 0xFF	; 255
 a3a:	79 f0       	breq	.+30     	; 0xa5a <__fp_splitA+0x2a>
 a3c:	87 95       	ror	r24
 a3e:	08 95       	ret
 a40:	12 16       	cp	r1, r18
 a42:	13 06       	cpc	r1, r19
 a44:	14 06       	cpc	r1, r20
 a46:	55 1f       	adc	r21, r21
 a48:	f2 cf       	rjmp	.-28     	; 0xa2e <__fp_split3+0xe>
 a4a:	46 95       	lsr	r20
 a4c:	f1 df       	rcall	.-30     	; 0xa30 <__fp_splitA>
 a4e:	08 c0       	rjmp	.+16     	; 0xa60 <__fp_splitA+0x30>
 a50:	16 16       	cp	r1, r22
 a52:	17 06       	cpc	r1, r23
 a54:	18 06       	cpc	r1, r24
 a56:	99 1f       	adc	r25, r25
 a58:	f1 cf       	rjmp	.-30     	; 0xa3c <__fp_splitA+0xc>
 a5a:	86 95       	lsr	r24
 a5c:	71 05       	cpc	r23, r1
 a5e:	61 05       	cpc	r22, r1
 a60:	08 94       	sec
 a62:	08 95       	ret

00000a64 <__fp_zero>:
 a64:	e8 94       	clt

00000a66 <__fp_szero>:
 a66:	bb 27       	eor	r27, r27
 a68:	66 27       	eor	r22, r22
 a6a:	77 27       	eor	r23, r23
 a6c:	cb 01       	movw	r24, r22
 a6e:	97 f9       	bld	r25, 7
 a70:	08 95       	ret

00000a72 <__gesf2>:
 a72:	8a df       	rcall	.-236    	; 0x988 <__fp_cmp>
 a74:	08 f4       	brcc	.+2      	; 0xa78 <__gesf2+0x6>
 a76:	8f ef       	ldi	r24, 0xFF	; 255
 a78:	08 95       	ret

00000a7a <__mulsf3>:
 a7a:	0b d0       	rcall	.+22     	; 0xa92 <__mulsf3x>
 a7c:	c0 cf       	rjmp	.-128    	; 0x9fe <__fp_round>
 a7e:	b1 df       	rcall	.-158    	; 0x9e2 <__fp_pscA>
 a80:	28 f0       	brcs	.+10     	; 0xa8c <__mulsf3+0x12>
 a82:	b6 df       	rcall	.-148    	; 0x9f0 <__fp_pscB>
 a84:	18 f0       	brcs	.+6      	; 0xa8c <__mulsf3+0x12>
 a86:	95 23       	and	r25, r21
 a88:	09 f0       	breq	.+2      	; 0xa8c <__mulsf3+0x12>
 a8a:	a2 cf       	rjmp	.-188    	; 0x9d0 <__fp_inf>
 a8c:	a7 cf       	rjmp	.-178    	; 0x9dc <__fp_nan>
 a8e:	11 24       	eor	r1, r1
 a90:	ea cf       	rjmp	.-44     	; 0xa66 <__fp_szero>

00000a92 <__mulsf3x>:
 a92:	c6 df       	rcall	.-116    	; 0xa20 <__fp_split3>
 a94:	a0 f3       	brcs	.-24     	; 0xa7e <__mulsf3+0x4>

00000a96 <__mulsf3_pse>:
 a96:	95 9f       	mul	r25, r21
 a98:	d1 f3       	breq	.-12     	; 0xa8e <__mulsf3+0x14>
 a9a:	95 0f       	add	r25, r21
 a9c:	50 e0       	ldi	r21, 0x00	; 0
 a9e:	55 1f       	adc	r21, r21
 aa0:	62 9f       	mul	r22, r18
 aa2:	f0 01       	movw	r30, r0
 aa4:	72 9f       	mul	r23, r18
 aa6:	bb 27       	eor	r27, r27
 aa8:	f0 0d       	add	r31, r0
 aaa:	b1 1d       	adc	r27, r1
 aac:	63 9f       	mul	r22, r19
 aae:	aa 27       	eor	r26, r26
 ab0:	f0 0d       	add	r31, r0
 ab2:	b1 1d       	adc	r27, r1
 ab4:	aa 1f       	adc	r26, r26
 ab6:	64 9f       	mul	r22, r20
 ab8:	66 27       	eor	r22, r22
 aba:	b0 0d       	add	r27, r0
 abc:	a1 1d       	adc	r26, r1
 abe:	66 1f       	adc	r22, r22
 ac0:	82 9f       	mul	r24, r18
 ac2:	22 27       	eor	r18, r18
 ac4:	b0 0d       	add	r27, r0
 ac6:	a1 1d       	adc	r26, r1
 ac8:	62 1f       	adc	r22, r18
 aca:	73 9f       	mul	r23, r19
 acc:	b0 0d       	add	r27, r0
 ace:	a1 1d       	adc	r26, r1
 ad0:	62 1f       	adc	r22, r18
 ad2:	83 9f       	mul	r24, r19
 ad4:	a0 0d       	add	r26, r0
 ad6:	61 1d       	adc	r22, r1
 ad8:	22 1f       	adc	r18, r18
 ada:	74 9f       	mul	r23, r20
 adc:	33 27       	eor	r19, r19
 ade:	a0 0d       	add	r26, r0
 ae0:	61 1d       	adc	r22, r1
 ae2:	23 1f       	adc	r18, r19
 ae4:	84 9f       	mul	r24, r20
 ae6:	60 0d       	add	r22, r0
 ae8:	21 1d       	adc	r18, r1
 aea:	82 2f       	mov	r24, r18
 aec:	76 2f       	mov	r23, r22
 aee:	6a 2f       	mov	r22, r26
 af0:	11 24       	eor	r1, r1
 af2:	9f 57       	subi	r25, 0x7F	; 127
 af4:	50 40       	sbci	r21, 0x00	; 0
 af6:	8a f0       	brmi	.+34     	; 0xb1a <__mulsf3_pse+0x84>
 af8:	e1 f0       	breq	.+56     	; 0xb32 <__mulsf3_pse+0x9c>
 afa:	88 23       	and	r24, r24
 afc:	4a f0       	brmi	.+18     	; 0xb10 <__mulsf3_pse+0x7a>
 afe:	ee 0f       	add	r30, r30
 b00:	ff 1f       	adc	r31, r31
 b02:	bb 1f       	adc	r27, r27
 b04:	66 1f       	adc	r22, r22
 b06:	77 1f       	adc	r23, r23
 b08:	88 1f       	adc	r24, r24
 b0a:	91 50       	subi	r25, 0x01	; 1
 b0c:	50 40       	sbci	r21, 0x00	; 0
 b0e:	a9 f7       	brne	.-22     	; 0xafa <__mulsf3_pse+0x64>
 b10:	9e 3f       	cpi	r25, 0xFE	; 254
 b12:	51 05       	cpc	r21, r1
 b14:	70 f0       	brcs	.+28     	; 0xb32 <__mulsf3_pse+0x9c>
 b16:	5c cf       	rjmp	.-328    	; 0x9d0 <__fp_inf>
 b18:	a6 cf       	rjmp	.-180    	; 0xa66 <__fp_szero>
 b1a:	5f 3f       	cpi	r21, 0xFF	; 255
 b1c:	ec f3       	brlt	.-6      	; 0xb18 <__mulsf3_pse+0x82>
 b1e:	98 3e       	cpi	r25, 0xE8	; 232
 b20:	dc f3       	brlt	.-10     	; 0xb18 <__mulsf3_pse+0x82>
 b22:	86 95       	lsr	r24
 b24:	77 95       	ror	r23
 b26:	67 95       	ror	r22
 b28:	b7 95       	ror	r27
 b2a:	f7 95       	ror	r31
 b2c:	e7 95       	ror	r30
 b2e:	9f 5f       	subi	r25, 0xFF	; 255
 b30:	c1 f7       	brne	.-16     	; 0xb22 <__mulsf3_pse+0x8c>
 b32:	fe 2b       	or	r31, r30
 b34:	88 0f       	add	r24, r24
 b36:	91 1d       	adc	r25, r1
 b38:	96 95       	lsr	r25
 b3a:	87 95       	ror	r24
 b3c:	97 f9       	bld	r25, 7
 b3e:	08 95       	ret

00000b40 <eeprom_read_block>:
 b40:	dc 01       	movw	r26, r24
 b42:	cb 01       	movw	r24, r22

00000b44 <eeprom_read_blraw>:
 b44:	fc 01       	movw	r30, r24
 b46:	f9 99       	sbic	0x1f, 1	; 31
 b48:	fe cf       	rjmp	.-4      	; 0xb46 <eeprom_read_blraw+0x2>
 b4a:	06 c0       	rjmp	.+12     	; 0xb58 <eeprom_read_blraw+0x14>
 b4c:	f2 bd       	out	0x22, r31	; 34
 b4e:	e1 bd       	out	0x21, r30	; 33
 b50:	f8 9a       	sbi	0x1f, 0	; 31
 b52:	31 96       	adiw	r30, 0x01	; 1
 b54:	00 b4       	in	r0, 0x20	; 32
 b56:	0d 92       	st	X+, r0
 b58:	41 50       	subi	r20, 0x01	; 1
 b5a:	50 40       	sbci	r21, 0x00	; 0
 b5c:	b8 f7       	brcc	.-18     	; 0xb4c <eeprom_read_blraw+0x8>
 b5e:	08 95       	ret

00000b60 <eeprom_write_block>:
 b60:	dc 01       	movw	r26, r24
 b62:	cb 01       	movw	r24, r22
 b64:	02 c0       	rjmp	.+4      	; 0xb6a <eeprom_write_block+0xa>
 b66:	2d 91       	ld	r18, X+
 b68:	05 d0       	rcall	.+10     	; 0xb74 <eeprom_write_r18>
 b6a:	41 50       	subi	r20, 0x01	; 1
 b6c:	50 40       	sbci	r21, 0x00	; 0
 b6e:	d8 f7       	brcc	.-10     	; 0xb66 <eeprom_write_block+0x6>
 b70:	08 95       	ret

00000b72 <eeprom_write_byte>:
 b72:	26 2f       	mov	r18, r22

00000b74 <eeprom_write_r18>:
 b74:	f9 99       	sbic	0x1f, 1	; 31
 b76:	fe cf       	rjmp	.-4      	; 0xb74 <eeprom_write_r18>
 b78:	1f ba       	out	0x1f, r1	; 31
 b7a:	92 bd       	out	0x22, r25	; 34
 b7c:	81 bd       	out	0x21, r24	; 33
 b7e:	20 bd       	out	0x20, r18	; 32
 b80:	0f b6       	in	r0, 0x3f	; 63
 b82:	f8 94       	cli
 b84:	fa 9a       	sbi	0x1f, 2	; 31
 b86:	f9 9a       	sbi	0x1f, 1	; 31
 b88:	0f be       	out	0x3f, r0	; 63
 b8a:	01 96       	adiw	r24, 0x01	; 1
 b8c:	08 95       	ret

00000b8e <_exit>:
 b8e:	f8 94       	cli

00000b90 <__stop_program>:
 b90:	ff cf       	rjmp	.-2      	; 0xb90 <__stop_program>
